{"version":3,"file":"bundle.js","sources":["../c8414a0279866f35916cf628c2c74f","../lib/main.js"],"sourcesContent":["export default '/home/runner/work/datasets-us-states-capitals/datasets-us-states-capitals/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs-read-json' ).sync;\n\n\n// VARIABLES //\n\nvar fpath = resolve( __dirname, '..', 'data', 'data.json' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a list of US state capitals in alphabetical order according to state name.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {StringArray} capitals\n*\n* @example\n* var data = capitals();\n* // returns [ 'Montgomery', 'Juneau', 'Phoenix', 'Little Rock', ... ]\n*/\nfunction capitals() {\n\tvar data = readJSON( fpath, opts );\n\tif ( data instanceof Error ) {\n\t\tthrow data;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = capitals;\n"],"names":["resolve","require","readJSON","sync","fpath","opts","encoding","module","exports","data","Error"],"mappings":";kfAAe,ICsBXA,EAAUC,QAAS,QAASD,QAC5BE,EAAWD,QAAS,wBAAyBE,KAK7CC,EAAQJ,ED5BG,gFC4BiB,KAAM,OAAQ,aAC1CK,EAAO,CACVC,SAAY,eAgCbC,OAAOC,QAXP,WACC,IAAIC,EAAOP,EAAUE,EAAOC,GAC5B,GAAKI,aAAgBC,MACpB,MAAMD,EAEP,OAAOA"}